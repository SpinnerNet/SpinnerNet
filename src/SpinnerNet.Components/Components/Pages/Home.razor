@page "/"
@page "/app"
@using Microsoft.AspNetCore.Components.Authorization
@using SpinnerNet.Personas.Services
@using SpinnerNet.Shared.Models
@using SpinnerNet.Shared.Models.CosmosDb
@using SpinnerNet.Shared.Extensions
@* COMMENTED OUT FOR SPRINT 1 - @using SpinnerNet.Core.Features.Buddies *@
@inject IPersonaService PersonaService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject IMediator Mediator
@inject ISnackbar Snackbar

<PageTitle>Spinner.Net - Your Digital Companion Platform</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (!hasCompletedOnboarding)
        {
            <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-16">
                <MudText Typo="Typo.h3" Align="Align.Center" Class="mb-8">
                    Welcome to Spinner.Net! ðŸŽ‰
                </MudText>
                <MudText Typo="Typo.h6" Align="Align.Center" Class="mb-8">
                    Let's create your digital persona to get started
                </MudText>
                <OnboardingWizard OnCompleted="HandleOnboardingCompleted" />
            </MudContainer>
        }
        else
        {
            <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                <!-- Welcome Header -->
                <div style="display: flex; align-items: center; gap: 16px; margin-bottom: 24px;">
                    <MudAvatar Size="Size.Large" Color="Color.Primary">
                        @(currentUser?.DisplayName?.FirstOrDefault().ToString().ToUpperInvariant() ?? "U")
                    </MudAvatar>
                    <div>
                        <MudText Typo="Typo.h4">
                            Welcome back, @currentUser?.DisplayName! ðŸ‘‹
                        </MudText>
                        <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                            Your Zeitsparkasse platform â€¢ Building time value for the ZeitCoin economy
                        </MudText>
                    </div>
                    <MudSpacer />
                    <MudButtonGroup Variant="Variant.Outlined">
                        @* COMMENTED OUT FOR SPRINT 1 - Task Management Button *@
                        <MudButton StartIcon="Icons.Material.Filled.Chat" 
                                  Color="@(currentView == ViewMode.Chat ? Color.Primary : Color.Default)"
                                  OnClick="@(() => currentView = ViewMode.Chat)">
                            AI Buddy (Coming Soon)
                        </MudButton>
                        @* COMMENTED OUT FOR SPRINT 1 - Analytics Button *@
                    </MudButtonGroup>
                </div>

                @* COMMENTED OUT FOR SPRINT 1 - Task Management View *@
                @if (currentView == ViewMode.Chat)
                {
                    <!-- AI Buddy Placeholder for Sprint 1 -->
                    <MudCard Elevation="3" Style="max-width: 600px; margin: 40px auto;">
                        <MudCardContent style="text-align: center; padding: 40px;">
                            <MudIcon Icon="Icons.Material.Filled.SmartToy" Size="Size.Large" Color="Color.Info" />
                            <MudText Typo="Typo.h5" Class="mt-4 mb-3">
                                AI Buddy Features Coming Soon
                            </MudText>
                            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                                Focus for Sprint 1: User registration and persona creation.
                                AI buddy features will be implemented in a future sprint.
                            </MudText>
                            <MudButton Color="Color.Info" 
                                      Variant="Variant.Outlined" 
                                      Size="Size.Large"
                                      StartIcon="Icons.Material.Filled.Schedule"
                                      Disabled="true">
                                Coming in Future Sprint
                            </MudButton>
                        </MudCardContent>
                    </MudCard>
                }
                @* COMMENTED OUT FOR SPRINT 1 - Analytics View *@

                <!-- Quick Stats Overview (Always Visible) -->
                <MudCard Class="mt-6" Elevation="2">
                    <MudCardContent>
                        <MudGrid>
                            <MudItem xs="12" md="3">
                                <div style="text-align: center; padding: 16px;">
                                    <MudIcon Icon="Icons.Material.Filled.Person" Size="Size.Large" Color="Color.Primary" />
                                    <MudText Typo="Typo.h6" Class="mt-2">Digital Persona</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                                        @activePersona?.BasicInfo.Languages.Preferred.ToUpperInvariant() â€¢ 
                                        @activePersona?.TypeLeapConfig.UIComplexityLevel
                                    </MudText>
                                </div>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <div style="text-align: center; padding: 16px;">
                                    <MudIcon Icon="Icons.Material.Filled.SmartToy" Size="Size.Large" Color="Color.Info" />
                                    <MudText Typo="Typo.h6" Class="mt-2">AI Buddy</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                                        Sprint 1: Coming Soon
                                    </MudText>
                                </div>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <div style="text-align: center; padding: 16px;">
                                    <MudIcon Icon="Icons.Material.Filled.Timeline" Size="Size.Large" Color="Color.Info" />
                                    <MudText Typo="Typo.h6" Class="mt-2">Time Banking</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                                        Building ZeitCoin foundation
                                    </MudText>
                                </div>
                            </MudItem>
                            <MudItem xs="12" md="3">
                                <div style="text-align: center; padding: 16px;">
                                    <MudIcon Icon="Icons.Material.Filled.Security" Size="Size.Large" Color="Color.Warning" />
                                    <MudText Typo="Typo.h6" Class="mt-2">Data Sovereignty</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">
                                        Your data, your control
                                    </MudText>
                                </div>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudContainer>
        }
    </Authorized>
    <NotAuthorized>
        <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-16">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" Class="text-center">
                    <MudText Typo="Typo.h2" Class="mb-8">
                        Welcome to Spinner.Net
                    </MudText>
                    <MudText Typo="Typo.h5" Class="mb-8">
                        Your Digital Companion Platform
                    </MudText>
                    <MudText Typo="Typo.body1" Class="mb-8">
                        Spinner.Net is the digital backbone connecting Creating, Teaching, and Exchange. 
                        Build your digital persona, connect with AI companions, and access professional services 
                        while maintaining complete control over your data.
                    </MudText>
                    <MudButton OnClick="@LoginDemo" Color="Color.Primary" Variant="Variant.Filled" Size="Size.Large" Class="mr-4">
                        Get Started
                    </MudButton>
                    <MudButton OnClick="@LoginDemo" Color="Color.Secondary" Variant="Variant.Outlined" Size="Size.Large">
                        Sign In
                    </MudButton>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </NotAuthorized>
</AuthorizeView>

@code {
    private enum ViewMode { Chat } // SPRINT 1: Only keeping Chat for future buddy features
    
    private bool hasCompletedOnboarding = false;
    private User? currentUser;
    private string? currentUserId;
    private UserPersona? activePersona;
    // COMMENTED OUT FOR SPRINT 1 - private BuddyDocument? activeBuddy;
    private ViewMode currentView = ViewMode.Chat; // SPRINT 1: Default to Chat view

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            currentUserId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "demo-user-123";
            
            try
            {
                activePersona = await PersonaService.GetActivePersonaAsync(currentUserId);
                hasCompletedOnboarding = activePersona != null;
                
                if (hasCompletedOnboarding && activePersona != null)
                {
                    currentUser = new User
                    {
                        Id = currentUserId,
                        DisplayName = authState.User.FindFirst(System.Security.Claims.ClaimTypes.Name)?.Value ?? "Demo User",
                        HasCompletedOnboarding = true
                    };

                    // COMMENTED OUT FOR SPRINT 1 - await LoadUserBuddy();
                }
            }
            catch (Exception ex)
            {
                // If persona service fails, show onboarding
                hasCompletedOnboarding = false;
                currentUser = new User
                {
                    Id = currentUserId,
                    DisplayName = authState.User.FindFirst(System.Security.Claims.ClaimTypes.Name)?.Value ?? "Demo User",
                    HasCompletedOnboarding = false
                };
            }
        }
    }

    private void LoginDemo()
    {
        Navigation.NavigateTo("/Account/Login");
    }

    private async System.Threading.Tasks.Task HandleOnboardingCompleted()
    {
        hasCompletedOnboarding = true;
        await OnInitializedAsync(); // Refresh data
        StateHasChanged();
    }

    /*
    // COMMENTED OUT FOR SPRINT 1 - All buddy and task related methods
    // These will be implemented in future sprints:
    // - LoadUserBuddy()
    // - CreateDefaultBuddy()
    // - HandleTaskCreated()
    // - HandleTaskCreatedFromChat()
    */
}