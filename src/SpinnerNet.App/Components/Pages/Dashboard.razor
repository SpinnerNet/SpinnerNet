@page "/dashboard"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization
@using SpinnerNet.Shared.Localization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject ILocalizationService LocalizationService
@attribute [Authorize]

<PageTitle>@LocalizationService.GetString("Dashboard_Title") - Spinner.Net</PageTitle>

<div class="dashboard-container">
    <!-- Floating flower petals -->
    <FloatingPetals />
    
    <!-- Main dashboard content -->
    <div class="dashboard-content">
        <div class="welcome-section animate-fade-in">
            <div class="welcome-header">
                <div class="flower-icon animate-bloom">üåª</div>
                <h1>@LocalizationService.GetString("Dashboard_Welcome", _userName)</h1>
                <p>@LocalizationService.GetString("Dashboard_Subtitle")</p>
            </div>
        </div>
        
        <!-- Quick actions -->
        <div class="quick-actions animate-slide-up">
            <div class="action-card">
                <div class="action-icon">üí¨</div>
                <h3>@LocalizationService.GetString("Dashboard_Action_Chat")</h3>
                <p>@LocalizationService.GetString("Dashboard_Action_Chat_Desc")</p>
                <button class="action-button" @onclick="StartChat">
                    @LocalizationService.GetString("Dashboard_Action_Start")
                </button>
            </div>
            
            <div class="action-card">
                <div class="action-icon">‚è∞</div>
                <h3>@LocalizationService.GetString("Dashboard_Action_Time")</h3>
                <p>@LocalizationService.GetString("Dashboard_Action_Time_Desc")</p>
                <button class="action-button" @onclick="ManageTime">
                    @LocalizationService.GetString("Dashboard_Action_Manage")
                </button>
            </div>
            
            <div class="action-card">
                <div class="action-icon">üë•</div>
                <h3>@LocalizationService.GetString("Dashboard_Action_Community")</h3>
                <p>@LocalizationService.GetString("Dashboard_Action_Community_Desc")</p>
                <button class="action-button" @onclick="JoinCommunity">
                    @LocalizationService.GetString("Dashboard_Action_Join")
                </button>
            </div>
        </div>
        
        <!-- Recent activity -->
        <div class="recent-activity animate-slide-up">
            <h2>@LocalizationService.GetString("Dashboard_Recent_Title")</h2>
            <div class="activity-list">
                <div class="activity-item">
                    <div class="activity-icon">üéâ</div>
                    <div class="activity-content">
                        <h4>@LocalizationService.GetString("Dashboard_Recent_Welcome")</h4>
                        <p>@LocalizationService.GetString("Dashboard_Recent_Welcome_Desc")</p>
                        <span class="activity-time">@LocalizationService.GetString("Dashboard_Recent_Now")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .dashboard-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #fef3c7 0%, #ecfccb 50%, #d1fae5 100%);
        position: relative;
        overflow: hidden;
    }

    .dashboard-content {
        position: relative;
        z-index: 10;
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .welcome-section {
        text-align: center;
        margin-bottom: 3rem;
    }

    .welcome-header {
        background: white;
        border-radius: 20px;
        padding: 3rem 2rem;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border: 2px solid #f0f9ff;
    }

    .flower-icon {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        display: inline-block;
    }

    .welcome-header h1 {
        color: #1f2937;
        font-size: 2.5rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-family: 'Inter', sans-serif;
    }

    .welcome-header p {
        color: #6b7280;
        font-size: 1.2rem;
        margin-bottom: 0;
    }

    .quick-actions {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 3rem;
    }

    .action-card {
        background: white;
        border-radius: 16px;
        padding: 2rem;
        text-align: center;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        border: 2px solid #f0f9ff;
        transition: all 0.3s ease;
    }

    .action-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .action-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        animation: gentle-bounce 3s ease-in-out infinite;
    }

    .action-card h3 {
        color: #1f2937;
        font-size: 1.4rem;
        margin-bottom: 0.5rem;
    }

    .action-card p {
        color: #6b7280;
        margin-bottom: 1.5rem;
        line-height: 1.6;
    }

    .action-button {
        background: #10b981;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 0.8rem 2rem;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
    }

    .action-button:hover {
        background: #059669;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
    }

    .recent-activity {
        background: white;
        border-radius: 16px;
        padding: 2rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        border: 2px solid #f0f9ff;
    }

    .recent-activity h2 {
        color: #1f2937;
        font-size: 1.8rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .activity-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .activity-item {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        background: #f9fafb;
        border-radius: 12px;
        border: 1px solid #e5e7eb;
    }

    .activity-icon {
        font-size: 1.5rem;
        margin-top: 0.2rem;
    }

    .activity-content {
        flex: 1;
    }

    .activity-content h4 {
        color: #1f2937;
        margin-bottom: 0.25rem;
        font-size: 1.1rem;
    }

    .activity-content p {
        color: #6b7280;
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .activity-time {
        color: #9ca3af;
        font-size: 0.8rem;
    }

    .animate-bloom {
        animation: bloom 0.8s ease-out;
    }

    .animate-fade-in {
        animation: fade-in 0.8s ease-out;
    }

    .animate-slide-up {
        animation: slide-up 0.8s ease-out;
        animation-delay: 0.2s;
        animation-fill-mode: both;
    }

    @@keyframes gentle-bounce {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-5px); }
    }

    @@keyframes bloom {
        0% { transform: scale(0) rotate(-180deg); opacity: 0; }
        50% { transform: scale(1.1) rotate(10deg); }
        100% { transform: scale(1) rotate(0deg); opacity: 1; }
    }

    @@keyframes fade-in {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@keyframes slide-up {
        from { opacity: 0; transform: translateY(40px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@media (max-width: 768px) {
        .dashboard-content {
            padding: 1rem;
        }
        
        .welcome-header {
            padding: 2rem 1.5rem;
        }
        
        .welcome-header h1 {
            font-size: 2rem;
        }
        
        .quick-actions {
            grid-template-columns: 1fr;
        }
        
        .action-card {
            padding: 1.5rem;
        }
    }
</style>

@code {
    private string _userName = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            _userName = authState.User.Identity.Name ?? LocalizationService.GetString("Dashboard_Default_Name");
        }
        else
        {
            // Redirect to login if not authenticated
            Navigation.NavigateTo("/");
        }
    }

    private void StartChat()
    {
        // Navigate to chat feature
        Navigation.NavigateTo("/chat");
    }

    private void ManageTime()
    {
        // Navigate to time management
        Navigation.NavigateTo("/time");
    }

    private void JoinCommunity()
    {
        // Navigate to community features
        Navigation.NavigateTo("/community");
    }
}